Задания для лабораторных работ
1. Создайте базу данных с именем «Bank»
2. Создайте таблицы tblClient, tblAccountType, tblAccount, tblOperationType, tblOperation.
a. Для первичных ключей всех таблиц установите автоматическую генерацию значения.
b. Установите связи между таблицами в соответствии с внешними ключами. Для каждой
связи установите ограничения: каскадное обновление и запрет на каскадное удаление.
c. Сформируйте схему отношений в базе данных.
3. Составьте схему в виде орграфа, определяющую последовательность заполнения таблиц в базе
данных. Заполните все таблицы данными: по 10 записей в справочных таблицах, по 30 записей
в операционных таблицах.
4. Создайте запрос, возвращающий список операций, проведенных в период с 01.01.2014 г. по
01.02.2014 г. или в период с 01.05.2014 г. по 01.06.2014 г., а сумма операции составляет не
менее 200 руб. и не более 1000 руб. Список должен содержать Номер счета, дату проведения
операции, сумму операции. Список должен быть отсортирован по возрастанию даты
проведения операции.
5. Нарисуйте эскизы форм из пунктов 6-9 и последовательность их вызова.
6. На основе данных из таблицы tblAccount создайте форму с именем «Счета» для просмотра
записей в виде таблицы со следующими столбцами: «ФИО клиента», «Наименование типа
счета» «Дата открытия счета», «Номер счета».
7. Создайте форму с именем «Новый счет» для добавления счета, которая будет вызываться при
нажатии на кнопку «Добавить счет» на форме «Счета».
8. Создайте форму с именем «Счет» для просмотра данных об одном счете, в которой находятся
все данные о счете и подчиненная форма со следующими столбцами: «Дата проведения
операции», «Наименование типа операции», «Сумма». Форма вызывается из формы «Счета»
при выборе одного из счетов и двойном щелчке в соответствующем поле «Номер счета».
9. Создайте форму с именем «Новая операция», которая будет вызываться из формы «Счет» при
нажатии на соответствующую кнопку на форме. В форме в качестве нередактируемого поля
отображается крупно ФИО клиента, номер счета, наименование типа счета. Поля для
заполнения: тип операции, дата проведения операции, сумма. Поле тип операции представляет
собой раскрывающийся список наименований типов операций из соответствующей таблицы.
Поле дата проведения операции представляет собой календарь, поле сумма должно содержать
маску ввода.
10. Создайте отчет или html-документ с именем «Счета», содержащий следующую информацию:
Для каждого клиента выводится один раз его ФИО, дата рождения, адрес; ниже список счетов,
которые он открыл с указанием номера счета, наименования типа счета, даты открытия счета,
суммы на счете; ниже суммарное количество счетов для одного клиента. Информация о
каждом клиенте отделяется горизонтальной чертой. Список счетов оформлен как таблица.
Отчет заканчивается информацией о сумме на всех счетах, представленных в отчете.
11. Создайте отчет или html-документ с именем «Закрытые счета», содержащий список всех
закрытых счетов по типам счетов. Для каждого типа счета выводится его наименование. Ниже
представлен список закрытых счетов, имеющих соответствующий тип. Для каждого счета
выводятся номер счета, дата открытия и дата закрытия, ФИО клиента и его адрес; ниже
представлен список операций по счету. Для каждой операции указываются дата проведения
операции, наименование типа операции, сумма операции. По каждому счету выводится
количество операций. Для каждого типа счета выводится количество закрытых счетов,
имеющих соответствующий тип.
12. Создайте отчет или html-документ с именем «Выписка по счету», содержащий список
операций по номеру выбранного пользователем счета (номер счета – параметр отчета). Для
счета выводятся номер счета, наименование типа счета, ФИО клиента, дата открытия счета.
Для каждой операции по счету выводятся дата проведения операции, наименование типа
операции, сумма. Информация об операциях должна быть упорядочена по убыванию даты.
13. Создайте главную кнопочную форму для вызова формы «Счета» и трех отчетов (htmlдокументов). Для третьего отчета – с выпадающим списком наименований типов операций для
передачи значения параметра в запрос.
14. Создайте триггер, который проверяет, что у одного счета не должно быть двух операций в
один день. Проверьте работу триггера.
15. Создайте триггер, который при добавлении новой операции изменяет значение поля «сумма на
счете» (как изменяет?). Согласуйте данные в соответствующих таблицах для обеспечения
целостности базы данных. Создайте триггер, который при удалении операции изменяет
значение поля «сумма на счете». Проверьте работу триггера.
16. Создайте хранимую процедуру, которая создает временную таблицу для хранения данных из
отчета «Закрытые счета» и наполняет ее данными. Учтите, что процедура может быть вызвана
несколько раз. Проверьте работу процедуры.
17. Создайте хранимую процедуру, которая создает временную таблицу для хранения данных из
отчета «Выписка по счету» и наполняет ее данными. Параметр отчета сделайте параметром
процедуры. Учтите, что процедура может быть вызвана несколько раз. Проверьте работу
процедуры.
